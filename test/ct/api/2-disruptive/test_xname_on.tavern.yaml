# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Cray Advanced Platform Monitoring and Control (CAPMC) xname_on API.
# Author: Mitch Schooler, Andrew Nieuwsma
# Service: Cray Advanced Platform Monitoring and Control

# HMS test metrics test cases: 16

# POST /xname_off Power Off Compute Node
# POST /get_xname_status Verify Off Compute Node
# POST /xname_on Off Compute Node
# POST /get_xname_status Verify On Compute Node

# POST /xname_on Power On Compute Node
# POST /get_xname_status Verify On Compute Node
# POST /xname_on On Compute Node
# POST /get_xname_status Verify On Compute Node

# POST /xname_off Power Off Chassis
# POST /get_xname_status Verify Off Chassis
# POST /xname_on Off Chassis
# POST /get_xname_status Verify On Chassis

# POST /xname_off Power Off ComputeModule
# POST /get_xname_status Verify Off ComputeModule
# POST /xname_on Off ComputeModule
# POST /get_xname_status Verify On ComputeModule

#TODO: Need to create these components to ensure an HSNBoard exists under RouterModule
# POST /xname_off Power Off RouterModule and HSNBoard
# POST /get_xname_status Verify Off RouterModule and HSNBoard
# POST /xname_on Off RouterModule and HSNBoard
# POST /get_xname_status Verify On RouterModule and HSNBoard

#TODO: Need to create these components, they aren't created by simulation environment
# CabinetPDUOutlet
# CabinetPDUPowerConnector
---
test_name: capmcAPIxnameOnPOSToffComputeNode - TODO

stages:
  - name: capmcAPIxnameOnPOSToffComputeNodeTarget - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_xname: Components[0].ID

  - name: capmcAPIxnameOnPOSToffComputeNodePrep - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_off"
      # All compute node types support ForceOff (Cray, Intel, Gigabyte, HPE), can use force=true here
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffComputeNodePrep","xnames":["{node_xname}"],"force":true,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffComputeNodeStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "off":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

  - name: capmcAPIxnameOnPOSToffComputeNodeActual - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      # Not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffComputeNodeActual","xnames":["{node_xname}"],"force":false,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffComputeNodeStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

---
test_name: capmcAPIxnameOnPOSTonComputeNode - TODO

stages:
  - name: capmcAPIxnameOnPOSTonComputeNodeTarget - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_xname: Components[0].ID

  - name: capmcAPIxnameOnPOSTonComputeNodePrep - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      # Not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameOnPOSTonComputeNodePrep","xnames":["{node_xname}"],"force":false,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSTonComputeNodeStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

  - name: capmcAPIxnameOnPOSTonComputeNodeActual - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      # Not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameOnPOSTonComputeNodeActual","xnames":["{node_xname}"],"force":false,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSTonComputeNodeStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

---
test_name: capmcAPIxnameOnPOSToffChassis - TODO

stages:
  - name: capmcAPIxnameOnPOSToffChassisTarget - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Chassis"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          chassis_xname: Components[0].ID

  - name: capmcAPIxnameOnPOSToffChassisPrep - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_off"
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffChassisPrep","xnames":["{chassis_xname}"],"force":true,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffChassisStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{chassis_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "off":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{chassis_xname}"

  - name: capmcAPIxnameOnPOSToffChassisActual - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffChassisActual","xnames":["{chassis_xname}"],"force":false,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffChassisStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{chassis_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{chassis_xname}"

---
test_name: capmcAPIxnameOnPOSToffComputeModule - TODO

stages:
  - name: capmcAPIxnameOnPOSToffComputeModuleTarget - TODO
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=ComputeModule"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          compute_module_xname: Components[0].ID

  - name: capmcAPIxnameOnPOSToffComputeModulePrep - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_off"
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffComputeModulePrep","xnames":["{compute_module_xname}"],"force":true,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffComputeModuleStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{compute_module_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "off":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{compute_module_xname}"

  - name: capmcAPIxnameOnPOSToffComputeModuleActual - TODO
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffComputeModuleActual","xnames":["{compute_module_xname}"],"force":false,"recursive":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameOnPOSToffComputeModuleStatusCheck - TODO
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{compute_module_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{compute_module_xname}"

#---
##TODO: Need create these components since CAPMC expects RouterModule w/ HSNBoard under it, not all RouterMoodules are set up this way by simulation environment
##TODO: Check if this is expected for recursive:false, could be a bug since I don't see this behavior with other hierarchal components
#test_name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoard - TODO
#
#stages:
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardTargetRouterModule - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components?type=RouterModule"
#      method: GET
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      save:
#        json:
#          router_module_xname: Components[0].ID
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardTargetHSNBoard - TODO
#    request:
#      url: "{hsm_base_url}/hsm/v2/State/Components?type=HSNBoard"
#      method: GET
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      save:
#        json:
#          hsn_board_xname: Components[0].ID
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardPrep - TODO
#    request:
#      url: "{capmc_base_url}/capmc/v1/xname_off"
#      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardPrep","xnames":["{router_module_xname}","{hsn_board_xname}"],"force":true,"recursive":false}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardStatusCheckRouterModule - TODO
#    # retry here if needed since there can be delays to the state change
#    max_retries: 30
#    delay_after: 10
#    request:
#      url: "{capmc_base_url}/capmc/v1/get_xname_status"
#      json: {"source":"redfish","xnames":["{router_module_xname}"]}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#              "off":
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: str
#                    unique: True
#                    enum:
#                      - "{router_module_xname}"
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardStatusCheckHSNBoard - TODO
#    # retry here if needed since there can be delays to the state change
#    max_retries: 30
#    delay_after: 10
#    request:
#      url: "{capmc_base_url}/capmc/v1/get_xname_status"
#      json: {"source":"redfish","xnames":["{hsn_board_xname}"]}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#              "off":
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: str
#                    unique: True
#                    enum:
#                      - "{hsn_board_xname}"
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardActual - TODO
#    request:
#      url: "{capmc_base_url}/capmc/v1/xname_on"
#      json: {"reason":"CT test case: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardActual","xnames":["{router_module_xname}","{hsn_board_xname}"],"force":false,"recursive":false}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardStatusCheckRouterModule - TODO
#    # retry here if needed since there can be delays to the state change
#    max_retries: 30
#    delay_after: 10
#    request:
#      url: "{capmc_base_url}/capmc/v1/get_xname_status"
#      json: {"source":"redfish","xnames":["{router_module_xname}"]}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#              "on":
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: str
#                    unique: True
#                    enum:
#                      - "{router_module_xname}"
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardStatusCheckHSNBoard - TODO
#    # retry here if needed since there can be delays to the state change
#    max_retries: 30
#    delay_after: 10
#    request:
#      url: "{capmc_base_url}/capmc/v1/get_xname_status"
#      json: {"source":"redfish","xnames":["{hsn_board_xname}"]}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#              "on":
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: str
#                    unique: True
#                    enum:
#                      - "{hsn_board_xname}"
#
#  - name: capmcAPIxnameOnPOSToffRouterModuleAndHSNBoardStatusCheckRouterModuleAndHSNBoard - TODO
#    request:
#      url: "{capmc_base_url}/capmc/v1/get_xname_status"
#      json: {"source":"redfish","xnames":["{router_module_xname}","{hsn_board_xname}"]}
#      method: POST
#      verify: !bool "{verify}"
#    response:
#      status_code: 200
#      verify_response_with:
#        function: tavern.testutils.helpers:validate_pykwalify
#        extra_kwargs:
#          schema:
#            type: map
#            required: True
#            mapping:
#              "e":
#                type: int
#                required: True
#                enum:
#                  - 0
#              "err_msg":
#                required: True
#                type: str
#                enum:
#                  - ""
#              "on":
#                type: seq
#                matching: all
#                required: True
#                sequence:
#                  - type: str
#                    unique: True
#                    enum:
#                      - "{hsn_board_xname}"
#                      - "{router_module_xname}"
