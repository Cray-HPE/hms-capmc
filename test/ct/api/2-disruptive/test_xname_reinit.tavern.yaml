# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Cray Advanced Platform Monitoring and Control
# (CAPMC) xname_reinit API.
# Author: Mitch Schooler
# Service: Cray Advanced Platform Monitoring and Control

# HMS test metrics test cases: 12

# POST /xname_on Power On Compute Node
# POST /get_xname_status Verify On Compute Node
# POST /xname_reinit On Compute Node
# POST /get_xname_status Verify On Compute Node

# POST /xname_on Power On Multiple Compute Nodes
# POST /get_xname_status Verify On Compute Nodes
# POST /xname_reinit Multiple On Compute Nodes
# POST /get_xname_status Verify On Compute Nodes

# POST /xname_off Power Off Compute Node
# POST /get_xname_status Verify Off Compute Node
# POST /xname_reinit Off Compute Node
# POST /get_xname_status Verify On Compute Node
---
test_name: capmcAPIxnameReinitPOSTonComputeNode - Verify xname_reinit restarts a compute node that is powered on

stages:
  - name: capmcAPIxnameReinitPOSTonComputeNodeTarget - Retrieve a compute node from HSM to be used in later stages
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_xname: Components[0].ID

  - name: capmcAPIxnameReinitPOSTonComputeNodePrep - Power the target node on to prepare it for the test case
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      # not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameReinitPOSTonComputeNodePrep","xnames":["{node_xname}"],"force":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameReinitPOSTonComputeNodeStatusCheck - Verify that the target node is powered on using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

  - name: capmcAPIxnameReinitPOSTonComputeNodeActual - Restart the target node using xname_reinit
    request:
      url: "{capmc_base_url}/capmc/v1/xname_reinit"
      # not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameReinitPOSTonComputeNodeActual","xnames":["{node_xname}"],"force":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  # not checking that the node powers "Off" before powering back "On" again, could only get that to work on Intel compute node w/ force=true

  - name: capmcAPIxnameReinitPOSTonComputeNodeStatusCheck - Verify that the target node is powered on using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

---
test_name: capmcAPIxnameReinitPOSTmultipleOnComputeNodes - Verify xname_reinit restarts multiple compute nodes that are powered on

stages:
  - name: capmcAPIxnameReinitPOSTmultipleOnComputeNodesTargets - Retrieve two compute nodes from HSM to be used in later stages
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_1_xname: Components[0].ID
          node_2_xname: Components[1].ID

  - name: capmcAPIxnameReinitPOSTmultipleOnComputeNodesPrep - Power the target nodes on to prepare them for the test case
    request:
      url: "{capmc_base_url}/capmc/v1/xname_on"
      # not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameReinitPOSTmultipleOnComputeNodesPrep","xnames":["{node_1_xname}","{node_2_xname}"],"force":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameReinitPOSTmultipleOnComputeNodesStatusCheck - Verify that the target nodes are powered on using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_1_xname}","{node_2_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_1_xname}"
                      - "{node_2_xname}"

  - name: capmcAPIxnameReinitPOSTmultipleOnComputeNodesActual - Restart the target nodes using xname_reinit
    request:
      url: "{capmc_base_url}/capmc/v1/xname_reinit"
      # not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameReinitPOSTmultipleOnComputeNodesActual","xnames":["{node_1_xname}","{node_2_xname}"],"force":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameReinitPOSTmultipleOnComputeNodesStatusCheck - Verify that the target nodes are powered on using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_1_xname}","{node_2_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_1_xname}"
                      - "{node_2_xname}"

---
test_name: capmcAPIxnameReinitPOSToffComputeNode - Verify xname_reinit restarts a compute node that is powered off

stages:
  - name: capmcAPIxnameReinitPOSToffComputeNodeTarget - Retrieve a compute node from HSM to be used in later stages
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          node_xname: Components[0].ID

  - name: capmcAPIxnameReinitPOSToffComputeNodePrep - Power the target node off to prepare it for the test case
    request:
      url: "{capmc_base_url}/capmc/v1/xname_off"
      # all compute node types support ForceOff (Cray, Intel, Gigabyte, HPE), can use force=true here
      json: {"reason":"CT test case: capmcAPIxnameOffPOSToffComputeNodePrep","xnames":["{node_xname}"],"force":true}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameReinitPOSToffComputeNodeStatusCheck - Verify that the target node is powered off using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "off":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"

  - name: capmcAPIxnameReinitPOSToffComputeNodeActual - Restart the target node using xname_reinit
    request:
      url: "{capmc_base_url}/capmc/v1/xname_reinit"
      # not all compute node types support ForceOn (only Intel does), can't use force=true here
      json: {"reason":"CT test case: capmcAPIxnameReinitPOSToffComputeNodeActual","xnames":["{node_xname}"],"force":false}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""

  - name: capmcAPIxnameReinitPOSToffComputeNodeStatusCheck - Verify that the target node is powered on using get_xname_status
    # retry here if needed since there can be delays to the state change
    max_retries: 30
    delay_after: 10
    request:
      url: "{capmc_base_url}/capmc/v1/get_xname_status"
      json: {"source":"redfish","xnames":["{node_xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              "e":
                type: int
                required: True
                enum:
                  - 0
              "err_msg":
                required: True
                type: str
                enum:
                  - ""
              "on":
                type: seq
                matching: all
                required: True
                sequence:
                  - type: str
                    unique: True
                    enum:
                      - "{node_xname}"
