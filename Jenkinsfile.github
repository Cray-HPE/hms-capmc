@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "cray-capmc"
        DESCRIPTION = "Cray Advanced Platform Monitoring and Control (CAPMC) Service"
        IS_STABLE = getBuildIsStable()
        VERSION = getDockerBuildVersion(isStable: env.IS_STABLE)
        DOCKER_ARGS = getDockerBuildArgs(name: "hms-capmc", description: env.DESCRIPTION, version: env.VERSION)
        CHART_NAME = "cray-hms-capmc"
        CHART_VERSION = getChartVersion(version: env.VERSION)
    }

    stages {
        stage("Run Unit Tests") {
            steps {
                sh "export NO_CACHE=--no-cache; make unittest"
            }
        }

        stage("Run Coverage Tests") {
            steps {
                sh "export NO_CACHE=--no-cache; make coverage"
            }
        }

        stage("Run Integration Tests") {
            steps {
                sh "make integration"
            }
        }

        stage("Build Image") {
            steps {
                sh "export NO_CACHE=--no-cache; make image"
            }
        }

        stage("Build Chart") {
            steps {
                updateCsmHelmChartAppVersion(chartPath: "${WORKSPACE}/kubernetes/${CHART_NAME}", appVersion:  env.VERSION)
                sh "make chart"
            }
        }

        stage("Publish") {
            steps {
                script {
                    publishCsmDockerImage(image: env.NAME, tag: env.VERSION, isStable: env.IS_STABLE)
                    publishCsmHelmCharts(component: env.CHART_NAME, chartsPath: "${WORKSPACE}/kubernetes/.packaged", isStable: env.IS_STABLE)
                }
            }
        }
    }
}
